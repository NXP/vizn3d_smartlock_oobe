"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[360],{3905:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return m}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=o,b=u["".concat(l,".").concat(m)]||u[m]||p[m]||i;return t?a.createElement(b,r(r({ref:n},d),{},{components:t})):a.createElement(b,r({ref:n},d))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var c=2;c<i;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5095:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return d},default:function(){return u}});var a=t(7462),o=t(3366),i=(t(7294),t(3905)),r=["components"],s={sidebar_position:3},l="Mass Storage Device Updates (MSD)",c={unversionedId:"bootloader/boot_modes/mass_storage_device_updates",id:"bootloader/boot_modes/mass_storage_device_updates",isDocsHomePage:!1,title:"Mass Storage Device Updates (MSD)",description:"The Mass Storage Device (MSD) boot mode is a means by which application binaries can be flashed to the board via a drag-and-drop interface like one would use with a USB flash drive or similar device.",source:"@site/docs/bootloader/boot_modes/mass_storage_device_updates.md",sourceDirName:"bootloader/boot_modes",slug:"/bootloader/boot_modes/mass_storage_device_updates",permalink:"/vizn3d_smartlock_oobe/docs/bootloader/boot_modes/mass_storage_device_updates",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Normal Boot",permalink:"/vizn3d_smartlock_oobe/docs/bootloader/boot_modes/normal_boot"},next:{title:"Application Banks",permalink:"/vizn3d_smartlock_oobe/docs/bootloader/application_banks"}},d=[{value:"Enabling MSD Mode",id:"enabling-msd-mode",children:[],level:2},{value:"Flashing a New Binary",id:"flashing-a-new-binary",children:[],level:2}],p={toc:d};function u(e){var n=e.components,s=(0,o.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},p,s,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mass-storage-device-updates-msd"},"Mass Storage Device Updates (MSD)"),(0,i.kt)("p",null,"The Mass Storage Device (MSD) boot mode is a means by which application binaries can be flashed to the board via a drag-and-drop interface like one would use with a USB flash drive or similar device.\nMSD mode can be useful for deploying quick updates to marketers and engineers in the field without access to debugging tools like a Segger J-Link."),(0,i.kt)("h2",{id:"enabling-msd-mode"},"Enabling MSD Mode"),(0,i.kt)("p",null,"To enable MSD mode on the SLN-VIZN3D-IOT,\nsimply press and hold the ",(0,i.kt)("inlineCode",{parentName:"p"},"SW1")," button while powering on the board.\nIf done correctly,\nthe board's onboard LED will change to purple and begin blinking at an interval of roughly 1 second."),(0,i.kt)("div",{style:{textAlign:"center"}},(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Mass Storage Device Enabled",src:t(846).Z}))),(0,i.kt)("p",null,"Additionally, if connected to a Windows PC, your computer should make a sound indicating a new USB device has been connected and a new USB Storage Device will be shown in the file explorer."),(0,i.kt)("h2",{id:"flashing-a-new-binary"},"Flashing a New Binary"),(0,i.kt)("p",null,"To flash a new binary while Mass Storage device mode is enabled, you must first verify the application bank which is currently in use.\nThis information can be discovered by using the ",(0,i.kt)("inlineCode",{parentName:"p"},"version")," shell command while the main app is running."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"version\nApp running in Bank A\nVersion 1.0.4\nShell>>\n")),(0,i.kt)("p",null,"Once the current application bank in use has been identified, you must compile a binary for the alternate flash bank.\nFor example,\nif Bank A is currently in use,\nyou must compile a Bank B binary and vice versa.\nInstructions on compiling for a specific flash bank can this can be found in the ",(0,i.kt)("a",{parentName:"p",href:"/vizn3d_smartlock_oobe/docs/bootloader/application_banks"},"Application Banks")," section."),(0,i.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"The requirement to provide a binary for the alternate flash bank is designed to prevent corrupting the active flash bank\nand accidentally create an unrecoverable state\nwhich would require erasing and reflashing everything."))),(0,i.kt)("p",null,"After compiling a binary for the proper flash bank,\nactivate MSD mode by following the ",(0,i.kt)("a",{parentName:"p",href:"#enabling-msd-mode"},"instructions above"),"."),(0,i.kt)("p",null,"To begin flashing the binary,\nsimply drag and drop the binary onto the device listing for the USB Storage device associated with your board.\nWhile flashing is in progress, a pop-up window will indicate the current progress of the firmware download."),(0,i.kt)("p",null,"Upon completion,\nthe board will automatically reboot itself into the new firmware which was just flashed.\nThis can be verified by opening the serial CLI and typing the ",(0,i.kt)("inlineCode",{parentName:"p"},"version")," command again\nand checking that the application is running from the alternate flash bank."))}u.isMDXComponent=!0},846:function(e,n,t){n.Z=t.p+"assets/images/msd-ae79e7fa037ccd4c99b11abeaf876d6e.gif"}}]);