"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[201],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,f=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(f,i(i({ref:t},c),{},{components:n})):a.createElement(f,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},797:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],l={sidebar_position:3},s="Application Banks",p={unversionedId:"bootloader/application-banks",id:"bootloader/application-banks",isDocsHomePage:!1,title:"Application Banks",description:"- Dual application flash banks, Bank A and Bank B.",source:"@site/docs/bootloader/application-banks.md",sourceDirName:"bootloader",slug:"/bootloader/application-banks",permalink:"/vizn3d_smartlock_oobe/docs/bootloader/application-banks",editUrl:"https://github.com/nxp/vizn3d_smartlock_oobe/docs/docs/docs/bootloader/application-banks.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Mass Storage Device Updates (MSD)",permalink:"/vizn3d_smartlock_oobe/docs/bootloader/boot-modes/mass-storage-device-updates"},next:{title:"Introduction",permalink:"/vizn3d_smartlock_oobe/docs/framework/introduction"}},c=[{value:"Addresses",id:"addresses",children:[],level:2},{value:"Configuring Flash Bank in MCUXpresso IDE",id:"configuring-flash-bank-in-mcuxpresso-ide",children:[{value:"Convert .axf to .bin",id:"convert-axf-to-bin",children:[],level:3}],level:2}],d={toc:c};function u(e){var t=e.components,l=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"application-banks"},"Application Banks"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Dual application flash banks, ",(0,r.kt)("strong",{parentName:"li"},"Bank A")," and ",(0,r.kt)("strong",{parentName:"li"},"Bank B"),"."),(0,r.kt)("li",{parentName:"ul"},"Provides a redundancy mechanism used by the bootloader's update mechanisms.")),(0,r.kt)("p",null,'The SLN-VIZN3D-IOT utilizes a series of dual "application flash banks" used as redundancy mechanism when updating the firmware via one of the bootloader\'s ',(0,r.kt)("a",{parentName:"p",href:"/vizn3d_smartlock_oobe/docs/bootloader/boot-modes/mass-storage-device-updates"},"update mechanisms"),"."),(0,r.kt)("h2",{id:"addresses"},"Addresses"),(0,r.kt)("p",null,"The flash address for each of the application flash banks are as follows:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Bank A - ",(0,r.kt)("inlineCode",{parentName:"li"},"0x30100000")),(0,r.kt)("li",{parentName:"ul"},"Bank B - ",(0,r.kt)("inlineCode",{parentName:"li"},"0x30780000"))),(0,r.kt)("h2",{id:"configuring-flash-bank-in-mcuxpresso-ide"},"Configuring Flash Bank in MCUXpresso IDE"),(0,r.kt)("p",null,"Configuring the flash bank can be done in MCUXpresso IDE before compiling a project."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Right-click the ",(0,r.kt)("inlineCode",{parentName:"li"},"sln_vizn3d_iot_smart_lock")," project in the ",(0,r.kt)("strong",{parentName:"li"},"Project Explorer")," window."),(0,r.kt)("li",{parentName:"ol"},"Go to ",(0,r.kt)("strong",{parentName:"li"},"Properties")),(0,r.kt)("li",{parentName:"ol"},"Click on ",(0,r.kt)("strong",{parentName:"li"},"MCU Settings")),(0,r.kt)("li",{parentName:"ol"},"Change ",(0,r.kt)("inlineCode",{parentName:"li"},"FLASH_BANK")," from ",(0,r.kt)("inlineCode",{parentName:"li"},"0x30100000")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"0x30780000")," or vice versa."),(0,r.kt)("li",{parentName:"ol"},"Build the project")),(0,r.kt)("h3",{id:"convert-axf-to-bin"},"Convert .axf to .bin"),(0,r.kt)("p",null,"When building a project in MCUXpresso IDE,\nthe default behavior is to create a ",(0,r.kt)("inlineCode",{parentName:"p"},".axf")," file.\nHowever, some of the bootloader update mechanisms including ",(0,r.kt)("a",{parentName:"p",href:"/vizn3d_smartlock_oobe/docs/bootloader/boot-modes/mass-storage-device-updates"},"MSD updates")," require the use of a ",(0,r.kt)("inlineCode",{parentName:"p"},".bin")," file."),(0,r.kt)("p",null,"Fortunately,\nconverting a ",(0,r.kt)("inlineCode",{parentName:"p"},".axf")," file to ",(0,r.kt)("inlineCode",{parentName:"p"},".bin")," can be done in MCUXpresso without any additional setup."),(0,r.kt)("p",null,"To perform this conversion, navigate to the project directory which contains your compiled project binary and right-click on the ",(0,r.kt)("inlineCode",{parentName:"p"},".axf")," file in that directory."),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The binary for your project is likely located in either the ",(0,r.kt)("strong",{parentName:"p"},"Debug")," or ",(0,r.kt)("strong",{parentName:"p"},"Release")," folder depending on your current build config."))),(0,r.kt)("p",null,"In the context menu, select ",(0,r.kt)("strong",{parentName:"p"},"Binary Utilities->Create binary"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"Convert to Binary",src:n(665).Z})),(0,r.kt)("p",null,"Verify that the binary has successfully been created."))}u.isMDXComponent=!0},665:function(e,t,n){t.Z=n.p+"assets/images/convertToBinary-f7f06680de6583b10c1041483fbd683d.png"}}]);